{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "The AWS CloudFormation template for this Serverless application",
  "Resources": {
    "ServerlessDeploymentBucket": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256"
              }
            }
          ]
        }
      }
    },
    "ServerlessDeploymentBucketPolicy": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "ServerlessDeploymentBucket"
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Effect": "Deny",
              "Principal": "*",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":s3:::",
                      {
                        "Ref": "ServerlessDeploymentBucket"
                      },
                      "/*"
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":s3:::",
                      {
                        "Ref": "ServerlessDeploymentBucket"
                      }
                    ]
                  ]
                }
              ],
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": false
                }
              }
            }
          ]
        }
      }
    },
    "AuthLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/serverless-udagram-app-dev-Auth"
      }
    },
    "ResizeImagesLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/serverless-udagram-app-dev-ResizeImages"
      }
    },
    "SendUploadNotificationLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/serverless-udagram-app-dev-SendUploadNotification"
      }
    },
    "ConnectHandlerLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/serverless-udagram-app-dev-ConnectHandler"
      }
    },
    "DisconnectHandlerLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/serverless-udagram-app-dev-DisconnectHandler"
      }
    },
    "DefaultHandlerLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/serverless-udagram-app-dev-defaultHandler"
      }
    },
    "GetGroupsLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/serverless-udagram-app-dev-GetGroups"
      }
    },
    "CreateGroupLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/serverless-udagram-app-dev-CreateGroup"
      }
    },
    "GetImagesLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/serverless-udagram-app-dev-GetImages"
      }
    },
    "CreateImageLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/serverless-udagram-app-dev-CreateImage"
      }
    },
    "IamRoleLambdaExecution": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": {
              "Fn::Join": [
                "-",
                [
                  "serverless-udagram-app",
                  "dev",
                  "lambda"
                ]
              ]
            },
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:CreateLogStream",
                    "logs:CreateLogGroup"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/serverless-udagram-app-dev*:*"
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:PutLogEvents"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/serverless-udagram-app-dev*:*:*"
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "dynamodb:Scan",
                    "dynamodb:PutItem",
                    "dynamodb:GetItem"
                  ],
                  "Resource": "arn:aws:dynamodb:us-east-1:*:table/Groups-dev"
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "dynamodb:Scan",
                    "dynamodb:Query",
                    "dynamodb:PutItem",
                    "dynamodb:DeleteItem"
                  ],
                  "Resource": "arn:aws:dynamodb:us-east-1:*:table/serverless-udagram-app-websockets-table-dev"
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "dynamodb:Query",
                    "dynamodb:PutItem"
                  ],
                  "Resource": "arn:aws:dynamodb:us-east-1:*:table/Images-dev"
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "dynamodb:Query"
                  ],
                  "Resource": "arn:aws:dynamodb:us-east-1:*:table/Images-dev/index/ImageIdIndex"
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "s3:PutObject",
                    "s3:GetObject"
                  ],
                  "Resource": [
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:aws:s3:::",
                          "serverless-udagram-app-bucket-dev",
                          "/*"
                        ]
                      ]
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "s3:PutObject",
                    "s3:PutObject"
                  ],
                  "Resource": [
                    {
                      "Fn::Join": [
                        "",
                        [
                          {
                            "Fn::GetAtt": [
                              "ImageThumbnailsBucket",
                              "Arn"
                            ]
                          },
                          "/*"
                        ]
                      ]
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "execute-api:ManageConnections"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:execute-api:*:*:*/@connections/*"
                    }
                  ]
                }
              ]
            }
          }
        ],
        "Path": "/",
        "RoleName": {
          "Fn::Join": [
            "-",
            [
              "serverless-udagram-app",
              "dev",
              {
                "Ref": "AWS::Region"
              },
              "lambdaRole"
            ]
          ]
        }
      }
    },
    "AuthLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/serverless-udagram-app/dev/1671921834961-2022-12-24T22:43:54.961Z/serverless-udagram-app.zip"
        },
        "Handler": "src/lambda/auth/authorizer.handler",
        "Runtime": "nodejs16.x",
        "FunctionName": "serverless-udagram-app-dev-Auth",
        "MemorySize": 1024,
        "Timeout": 6,
        "Environment": {
          "Variables": {
            "GROUPS_TABLE": "Groups-dev",
            "IMAGES_TABLE": "Images-dev",
            "IMAGE_ID_INDEX": "ImageIdIndex",
            "IMAGES_S3_BUCKET_REGION": "us-east-1",
            "REGION": "us-east-1",
            "IMAGES_S3_BUCKET": "serverless-udagram-app-bucket-dev",
            "IMAGES_S3_URL_EXPIRY": "3600",
            "WEBSOCKETS_CONNECTION_TABLE": "serverless-udagram-app-websockets-table-dev",
            "AUTH0_TENANT_ID": "https://dev-7vdkrp24711g5tqn.us.auth0.com",
            "JWKS_ENDPOINT": ".well-known/jwks.json",
            "JWT_AUDIENCE": "https://dev-7vdkrp24711g5tqn.us.auth0.com/api/v2/",
            "JWT_ISSUER": "https://dev-7vdkrp24711g5tqn.us.auth0.com/",
            "STAGE": "dev",
            "IMAGE_THUMBNAILS_S3_BUCKET": "serverless-udagram-app-image-thumbnails-bucket-dev",
            "DUDE": "dude"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "AuthLogGroup"
      ]
    },
    "ResizeImagesLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/serverless-udagram-app/dev/1671921834961-2022-12-24T22:43:54.961Z/serverless-udagram-app.zip"
        },
        "Handler": "src/lambda/s3/resizeImages.handler",
        "Runtime": "nodejs16.x",
        "FunctionName": "serverless-udagram-app-dev-ResizeImages",
        "MemorySize": 1024,
        "Timeout": 6,
        "Environment": {
          "Variables": {
            "GROUPS_TABLE": "Groups-dev",
            "IMAGES_TABLE": "Images-dev",
            "IMAGE_ID_INDEX": "ImageIdIndex",
            "IMAGES_S3_BUCKET_REGION": "us-east-1",
            "REGION": "us-east-1",
            "IMAGES_S3_BUCKET": "serverless-udagram-app-bucket-dev",
            "IMAGES_S3_URL_EXPIRY": "3600",
            "WEBSOCKETS_CONNECTION_TABLE": "serverless-udagram-app-websockets-table-dev",
            "AUTH0_TENANT_ID": "https://dev-7vdkrp24711g5tqn.us.auth0.com",
            "JWKS_ENDPOINT": ".well-known/jwks.json",
            "JWT_AUDIENCE": "https://dev-7vdkrp24711g5tqn.us.auth0.com/api/v2/",
            "JWT_ISSUER": "https://dev-7vdkrp24711g5tqn.us.auth0.com/",
            "STAGE": "dev",
            "IMAGE_THUMBNAILS_S3_BUCKET": "serverless-udagram-app-image-thumbnails-bucket-dev",
            "DUDE": "dude"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "ResizeImagesLogGroup"
      ]
    },
    "SendUploadNotificationLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/serverless-udagram-app/dev/1671921834961-2022-12-24T22:43:54.961Z/serverless-udagram-app.zip"
        },
        "Handler": "src/lambda/s3/sendUploadNotification.handler",
        "Runtime": "nodejs16.x",
        "FunctionName": "serverless-udagram-app-dev-SendUploadNotification",
        "MemorySize": 1024,
        "Timeout": 6,
        "Environment": {
          "Variables": {
            "GROUPS_TABLE": "Groups-dev",
            "IMAGES_TABLE": "Images-dev",
            "IMAGE_ID_INDEX": "ImageIdIndex",
            "IMAGES_S3_BUCKET_REGION": "us-east-1",
            "REGION": "us-east-1",
            "IMAGES_S3_BUCKET": "serverless-udagram-app-bucket-dev",
            "IMAGES_S3_URL_EXPIRY": "3600",
            "WEBSOCKETS_CONNECTION_TABLE": "serverless-udagram-app-websockets-table-dev",
            "AUTH0_TENANT_ID": "https://dev-7vdkrp24711g5tqn.us.auth0.com",
            "JWKS_ENDPOINT": ".well-known/jwks.json",
            "JWT_AUDIENCE": "https://dev-7vdkrp24711g5tqn.us.auth0.com/api/v2/",
            "JWT_ISSUER": "https://dev-7vdkrp24711g5tqn.us.auth0.com/",
            "STAGE": "dev",
            "IMAGE_THUMBNAILS_S3_BUCKET": "serverless-udagram-app-image-thumbnails-bucket-dev",
            "DUDE": "dude",
            "WEBSOCKETS_API_ID": {
              "Ref": "WebsocketsApi"
            }
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "SendUploadNotificationLogGroup"
      ]
    },
    "ConnectHandlerLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/serverless-udagram-app/dev/1671921834961-2022-12-24T22:43:54.961Z/serverless-udagram-app.zip"
        },
        "Handler": "src/lambda/websocket/connect.handler",
        "Runtime": "nodejs16.x",
        "FunctionName": "serverless-udagram-app-dev-ConnectHandler",
        "MemorySize": 1024,
        "Timeout": 6,
        "Environment": {
          "Variables": {
            "GROUPS_TABLE": "Groups-dev",
            "IMAGES_TABLE": "Images-dev",
            "IMAGE_ID_INDEX": "ImageIdIndex",
            "IMAGES_S3_BUCKET_REGION": "us-east-1",
            "REGION": "us-east-1",
            "IMAGES_S3_BUCKET": "serverless-udagram-app-bucket-dev",
            "IMAGES_S3_URL_EXPIRY": "3600",
            "WEBSOCKETS_CONNECTION_TABLE": "serverless-udagram-app-websockets-table-dev",
            "AUTH0_TENANT_ID": "https://dev-7vdkrp24711g5tqn.us.auth0.com",
            "JWKS_ENDPOINT": ".well-known/jwks.json",
            "JWT_AUDIENCE": "https://dev-7vdkrp24711g5tqn.us.auth0.com/api/v2/",
            "JWT_ISSUER": "https://dev-7vdkrp24711g5tqn.us.auth0.com/",
            "STAGE": "dev",
            "IMAGE_THUMBNAILS_S3_BUCKET": "serverless-udagram-app-image-thumbnails-bucket-dev",
            "DUDE": "dude"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "ConnectHandlerLogGroup"
      ]
    },
    "DisconnectHandlerLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/serverless-udagram-app/dev/1671921834961-2022-12-24T22:43:54.961Z/serverless-udagram-app.zip"
        },
        "Handler": "src/lambda/websocket/disconnect.handler",
        "Runtime": "nodejs16.x",
        "FunctionName": "serverless-udagram-app-dev-DisconnectHandler",
        "MemorySize": 1024,
        "Timeout": 6,
        "Environment": {
          "Variables": {
            "GROUPS_TABLE": "Groups-dev",
            "IMAGES_TABLE": "Images-dev",
            "IMAGE_ID_INDEX": "ImageIdIndex",
            "IMAGES_S3_BUCKET_REGION": "us-east-1",
            "REGION": "us-east-1",
            "IMAGES_S3_BUCKET": "serverless-udagram-app-bucket-dev",
            "IMAGES_S3_URL_EXPIRY": "3600",
            "WEBSOCKETS_CONNECTION_TABLE": "serverless-udagram-app-websockets-table-dev",
            "AUTH0_TENANT_ID": "https://dev-7vdkrp24711g5tqn.us.auth0.com",
            "JWKS_ENDPOINT": ".well-known/jwks.json",
            "JWT_AUDIENCE": "https://dev-7vdkrp24711g5tqn.us.auth0.com/api/v2/",
            "JWT_ISSUER": "https://dev-7vdkrp24711g5tqn.us.auth0.com/",
            "STAGE": "dev",
            "IMAGE_THUMBNAILS_S3_BUCKET": "serverless-udagram-app-image-thumbnails-bucket-dev",
            "DUDE": "dude"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "DisconnectHandlerLogGroup"
      ]
    },
    "DefaultHandlerLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/serverless-udagram-app/dev/1671921834961-2022-12-24T22:43:54.961Z/serverless-udagram-app.zip"
        },
        "Handler": "src/lambda/websocket/default.handler",
        "Runtime": "nodejs16.x",
        "FunctionName": "serverless-udagram-app-dev-defaultHandler",
        "MemorySize": 1024,
        "Timeout": 6,
        "Environment": {
          "Variables": {
            "GROUPS_TABLE": "Groups-dev",
            "IMAGES_TABLE": "Images-dev",
            "IMAGE_ID_INDEX": "ImageIdIndex",
            "IMAGES_S3_BUCKET_REGION": "us-east-1",
            "REGION": "us-east-1",
            "IMAGES_S3_BUCKET": "serverless-udagram-app-bucket-dev",
            "IMAGES_S3_URL_EXPIRY": "3600",
            "WEBSOCKETS_CONNECTION_TABLE": "serverless-udagram-app-websockets-table-dev",
            "AUTH0_TENANT_ID": "https://dev-7vdkrp24711g5tqn.us.auth0.com",
            "JWKS_ENDPOINT": ".well-known/jwks.json",
            "JWT_AUDIENCE": "https://dev-7vdkrp24711g5tqn.us.auth0.com/api/v2/",
            "JWT_ISSUER": "https://dev-7vdkrp24711g5tqn.us.auth0.com/",
            "STAGE": "dev",
            "IMAGE_THUMBNAILS_S3_BUCKET": "serverless-udagram-app-image-thumbnails-bucket-dev",
            "DUDE": "dude"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "DefaultHandlerLogGroup"
      ]
    },
    "GetGroupsLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/serverless-udagram-app/dev/1671921834961-2022-12-24T22:43:54.961Z/serverless-udagram-app.zip"
        },
        "Handler": "src/lambda/http/getGroups.handler",
        "Runtime": "nodejs16.x",
        "FunctionName": "serverless-udagram-app-dev-GetGroups",
        "MemorySize": 1024,
        "Timeout": 6,
        "Environment": {
          "Variables": {
            "GROUPS_TABLE": "Groups-dev",
            "IMAGES_TABLE": "Images-dev",
            "IMAGE_ID_INDEX": "ImageIdIndex",
            "IMAGES_S3_BUCKET_REGION": "us-east-1",
            "REGION": "us-east-1",
            "IMAGES_S3_BUCKET": "serverless-udagram-app-bucket-dev",
            "IMAGES_S3_URL_EXPIRY": "3600",
            "WEBSOCKETS_CONNECTION_TABLE": "serverless-udagram-app-websockets-table-dev",
            "AUTH0_TENANT_ID": "https://dev-7vdkrp24711g5tqn.us.auth0.com",
            "JWKS_ENDPOINT": ".well-known/jwks.json",
            "JWT_AUDIENCE": "https://dev-7vdkrp24711g5tqn.us.auth0.com/api/v2/",
            "JWT_ISSUER": "https://dev-7vdkrp24711g5tqn.us.auth0.com/",
            "STAGE": "dev",
            "IMAGE_THUMBNAILS_S3_BUCKET": "serverless-udagram-app-image-thumbnails-bucket-dev",
            "DUDE": "dude"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "GetGroupsLogGroup"
      ]
    },
    "CreateGroupLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/serverless-udagram-app/dev/1671921834961-2022-12-24T22:43:54.961Z/serverless-udagram-app.zip"
        },
        "Handler": "src/lambda/http/createGroup.handler",
        "Runtime": "nodejs16.x",
        "FunctionName": "serverless-udagram-app-dev-CreateGroup",
        "MemorySize": 1024,
        "Timeout": 6,
        "Environment": {
          "Variables": {
            "GROUPS_TABLE": "Groups-dev",
            "IMAGES_TABLE": "Images-dev",
            "IMAGE_ID_INDEX": "ImageIdIndex",
            "IMAGES_S3_BUCKET_REGION": "us-east-1",
            "REGION": "us-east-1",
            "IMAGES_S3_BUCKET": "serverless-udagram-app-bucket-dev",
            "IMAGES_S3_URL_EXPIRY": "3600",
            "WEBSOCKETS_CONNECTION_TABLE": "serverless-udagram-app-websockets-table-dev",
            "AUTH0_TENANT_ID": "https://dev-7vdkrp24711g5tqn.us.auth0.com",
            "JWKS_ENDPOINT": ".well-known/jwks.json",
            "JWT_AUDIENCE": "https://dev-7vdkrp24711g5tqn.us.auth0.com/api/v2/",
            "JWT_ISSUER": "https://dev-7vdkrp24711g5tqn.us.auth0.com/",
            "STAGE": "dev",
            "IMAGE_THUMBNAILS_S3_BUCKET": "serverless-udagram-app-image-thumbnails-bucket-dev",
            "DUDE": "dude"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "CreateGroupLogGroup"
      ]
    },
    "GetImagesLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/serverless-udagram-app/dev/1671921834961-2022-12-24T22:43:54.961Z/serverless-udagram-app.zip"
        },
        "Handler": "src/lambda/http/getImages.handler",
        "Runtime": "nodejs16.x",
        "FunctionName": "serverless-udagram-app-dev-GetImages",
        "MemorySize": 1024,
        "Timeout": 6,
        "Environment": {
          "Variables": {
            "GROUPS_TABLE": "Groups-dev",
            "IMAGES_TABLE": "Images-dev",
            "IMAGE_ID_INDEX": "ImageIdIndex",
            "IMAGES_S3_BUCKET_REGION": "us-east-1",
            "REGION": "us-east-1",
            "IMAGES_S3_BUCKET": "serverless-udagram-app-bucket-dev",
            "IMAGES_S3_URL_EXPIRY": "3600",
            "WEBSOCKETS_CONNECTION_TABLE": "serverless-udagram-app-websockets-table-dev",
            "AUTH0_TENANT_ID": "https://dev-7vdkrp24711g5tqn.us.auth0.com",
            "JWKS_ENDPOINT": ".well-known/jwks.json",
            "JWT_AUDIENCE": "https://dev-7vdkrp24711g5tqn.us.auth0.com/api/v2/",
            "JWT_ISSUER": "https://dev-7vdkrp24711g5tqn.us.auth0.com/",
            "STAGE": "dev",
            "IMAGE_THUMBNAILS_S3_BUCKET": "serverless-udagram-app-image-thumbnails-bucket-dev",
            "DUDE": "dude"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "GetImagesLogGroup"
      ]
    },
    "CreateImageLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/serverless-udagram-app/dev/1671921834961-2022-12-24T22:43:54.961Z/serverless-udagram-app.zip"
        },
        "Handler": "src/lambda/http/createImage.handler",
        "Runtime": "nodejs16.x",
        "FunctionName": "serverless-udagram-app-dev-CreateImage",
        "MemorySize": 1024,
        "Timeout": 6,
        "Environment": {
          "Variables": {
            "GROUPS_TABLE": "Groups-dev",
            "IMAGES_TABLE": "Images-dev",
            "IMAGE_ID_INDEX": "ImageIdIndex",
            "IMAGES_S3_BUCKET_REGION": "us-east-1",
            "REGION": "us-east-1",
            "IMAGES_S3_BUCKET": "serverless-udagram-app-bucket-dev",
            "IMAGES_S3_URL_EXPIRY": "3600",
            "WEBSOCKETS_CONNECTION_TABLE": "serverless-udagram-app-websockets-table-dev",
            "AUTH0_TENANT_ID": "https://dev-7vdkrp24711g5tqn.us.auth0.com",
            "JWKS_ENDPOINT": ".well-known/jwks.json",
            "JWT_AUDIENCE": "https://dev-7vdkrp24711g5tqn.us.auth0.com/api/v2/",
            "JWT_ISSUER": "https://dev-7vdkrp24711g5tqn.us.auth0.com/",
            "STAGE": "dev",
            "IMAGE_THUMBNAILS_S3_BUCKET": "serverless-udagram-app-image-thumbnails-bucket-dev",
            "DUDE": "dude"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "CreateImageLogGroup"
      ]
    },
    "AuthLambdaVersionusVA2etTddFirZBTyBaGCEfY7cwJDiHgH8F1Lpx3IXs": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "AuthLambdaFunction"
        },
        "CodeSha256": "/g8xAyDonE4SJgvmru/u4iOJ5LRrWUow/tTUWHqit0M="
      }
    },
    "ResizeImagesLambdaVersionbR0XZrMX6zhjz4y1O1FkCvann10jxMmvsT4U4Rfrq0": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "ResizeImagesLambdaFunction"
        },
        "CodeSha256": "/g8xAyDonE4SJgvmru/u4iOJ5LRrWUow/tTUWHqit0M="
      }
    },
    "SendUploadNotificationLambdaVersionkH1yO8DKxzaFc97EtNP2Sq4zO67ngy2GbHRW140ybCA": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "SendUploadNotificationLambdaFunction"
        },
        "CodeSha256": "/g8xAyDonE4SJgvmru/u4iOJ5LRrWUow/tTUWHqit0M="
      }
    },
    "ConnectHandlerLambdaVersionDwebvRiQo6feffH4KsH8LsITzYhbP20cxnjWFeAlSw": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "ConnectHandlerLambdaFunction"
        },
        "CodeSha256": "/g8xAyDonE4SJgvmru/u4iOJ5LRrWUow/tTUWHqit0M="
      }
    },
    "DisconnectHandlerLambdaVersionn5bkIENEMKOttiQYaLBl40MQOv7ndtgUotrWHl0M": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "DisconnectHandlerLambdaFunction"
        },
        "CodeSha256": "/g8xAyDonE4SJgvmru/u4iOJ5LRrWUow/tTUWHqit0M="
      }
    },
    "DefaultHandlerLambdaVersionuvRilv9TuBV7o8NpjOqfIkpF4N35MEjhADTmIdc5tGw": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "DefaultHandlerLambdaFunction"
        },
        "CodeSha256": "/g8xAyDonE4SJgvmru/u4iOJ5LRrWUow/tTUWHqit0M="
      }
    },
    "GetGroupsLambdaVersion8dn74xMQN3cp95KOFPoxRdyEOvLayQRJlJICUIjU": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "GetGroupsLambdaFunction"
        },
        "CodeSha256": "/g8xAyDonE4SJgvmru/u4iOJ5LRrWUow/tTUWHqit0M="
      }
    },
    "CreateGroupLambdaVersionSt17dcNtdQGddEoeLz7NfRGl5YA7dpvoDOjZJxvUESc": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "CreateGroupLambdaFunction"
        },
        "CodeSha256": "/g8xAyDonE4SJgvmru/u4iOJ5LRrWUow/tTUWHqit0M="
      }
    },
    "GetImagesLambdaVersion82iklPA0LP5RrBwNcwZGTfivYaXhPTrCC4bzAvwQcQI": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "GetImagesLambdaFunction"
        },
        "CodeSha256": "/g8xAyDonE4SJgvmru/u4iOJ5LRrWUow/tTUWHqit0M="
      }
    },
    "CreateImageLambdaVersionmsfD280plI3MinVfGdRb9ZCh2DXZoUH4aT9evIp4": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "CreateImageLambdaFunction"
        },
        "CodeSha256": "/g8xAyDonE4SJgvmru/u4iOJ5LRrWUow/tTUWHqit0M="
      }
    },
    "ApiGatewayRestApi": {
      "Type": "AWS::ApiGateway::RestApi",
      "Properties": {
        "Name": "dev-serverless-udagram-app",
        "EndpointConfiguration": {
          "Types": [
            "EDGE"
          ]
        },
        "Policy": ""
      }
    },
    "ApiGatewayResourceGroups": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "ApiGatewayRestApi",
            "RootResourceId"
          ]
        },
        "PathPart": "groups",
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayResourceGroupsGroupidVar": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Ref": "ApiGatewayResourceGroups"
        },
        "PathPart": "{groupId}",
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayResourceGroupsGroupidVarImages": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Ref": "ApiGatewayResourceGroupsGroupidVar"
        },
        "PathPart": "images",
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayMethodGroupsOptions": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "MethodResponses": [
          {
            "StatusCode": "200",
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true
            },
            "ResponseModels": {}
          }
        ],
        "RequestParameters": {},
        "Integration": {
          "Type": "MOCK",
          "RequestTemplates": {
            "application/json": "{statusCode:200}"
          },
          "ContentHandling": "CONVERT_TO_TEXT",
          "IntegrationResponses": [
            {
              "StatusCode": "200",
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST,GET'"
              },
              "ResponseTemplates": {
                "application/json": ""
              }
            }
          ]
        },
        "ResourceId": {
          "Ref": "ApiGatewayResourceGroups"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayMethodGroupsGroupidVarImagesOptions": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "MethodResponses": [
          {
            "StatusCode": "200",
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true
            },
            "ResponseModels": {}
          }
        ],
        "RequestParameters": {},
        "Integration": {
          "Type": "MOCK",
          "RequestTemplates": {
            "application/json": "{statusCode:200}"
          },
          "ContentHandling": "CONVERT_TO_TEXT",
          "IntegrationResponses": [
            {
              "StatusCode": "200",
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET'"
              },
              "ResponseTemplates": {
                "application/json": ""
              }
            }
          ]
        },
        "ResourceId": {
          "Ref": "ApiGatewayResourceGroupsGroupidVarImages"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayMethodGroupsGet": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "GET",
        "RequestParameters": {},
        "ResourceId": {
          "Ref": "ApiGatewayResourceGroups"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "CUSTOM",
        "AuthorizerId": {
          "Ref": "AuthApiGatewayAuthorizer"
        },
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "GetGroupsLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": [],
        "RequestValidatorId": {
          "Ref": "RequestBodyValidator"
        }
      },
      "DependsOn": "AuthApiGatewayAuthorizer"
    },
    "ApiGatewayMethodGroupsPost": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "POST",
        "RequestParameters": {},
        "ResourceId": {
          "Ref": "ApiGatewayResourceGroups"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "CUSTOM",
        "AuthorizerId": {
          "Ref": "AuthApiGatewayAuthorizer"
        },
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "CreateGroupLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": [],
        "RequestValidatorId": {
          "Ref": "RequestBodyValidator"
        },
        "RequestModels": {
          "application/json": "GroupRequest"
        }
      },
      "DependsOn": [
        "GroupRequestModel"
      ]
    },
    "ApiGatewayMethodGroupsGroupidVarImagesGet": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "GET",
        "RequestParameters": {},
        "ResourceId": {
          "Ref": "ApiGatewayResourceGroupsGroupidVarImages"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "CUSTOM",
        "AuthorizerId": {
          "Ref": "AuthApiGatewayAuthorizer"
        },
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "GetImagesLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": [],
        "RequestValidatorId": {
          "Ref": "RequestBodyValidator"
        }
      },
      "DependsOn": "AuthApiGatewayAuthorizer"
    },
    "ApiGatewayMethodGroupsGroupidVarImagesPost": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "POST",
        "RequestParameters": {},
        "ResourceId": {
          "Ref": "ApiGatewayResourceGroupsGroupidVarImages"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "CUSTOM",
        "AuthorizerId": {
          "Ref": "AuthApiGatewayAuthorizer"
        },
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "CreateImageLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": [],
        "RequestValidatorId": {
          "Ref": "RequestBodyValidator"
        },
        "RequestModels": {
          "application/json": "CreateImageRequest"
        }
      },
      "DependsOn": [
        "CreateImageRequestModel"
      ]
    },
    "AuthApiGatewayAuthorizer": {
      "Type": "AWS::ApiGateway::Authorizer",
      "Properties": {
        "IdentitySource": "method.request.header.Authorization",
        "Name": "Auth",
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "AuthorizerUri": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":apigateway:",
              {
                "Ref": "AWS::Region"
              },
              ":lambda:path/2015-03-31/functions/",
              {
                "Fn::GetAtt": [
                  "AuthLambdaFunction",
                  "Arn"
                ]
              },
              "/invocations"
            ]
          ]
        },
        "Type": "TOKEN"
      }
    },
    "ApiGatewayDeployment1671921792507": {
      "Type": "AWS::ApiGateway::Deployment",
      "Properties": {
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "StageName": "dev"
      },
      "DependsOn": [
        "ApiGatewayMethodGroupsOptions",
        "ApiGatewayMethodGroupsGroupidVarImagesOptions",
        "ApiGatewayMethodGroupsGet",
        "ApiGatewayMethodGroupsPost",
        "ApiGatewayMethodGroupsGroupidVarImagesGet",
        "ApiGatewayMethodGroupsGroupidVarImagesPost"
      ]
    },
    "GetGroupsLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "GetGroupsLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApi"
              },
              "/*/*"
            ]
          ]
        }
      }
    },
    "AuthLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "AuthLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApi"
              },
              "/*/*"
            ]
          ]
        }
      }
    },
    "CreateGroupLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "CreateGroupLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApi"
              },
              "/*/*"
            ]
          ]
        }
      }
    },
    "GetImagesLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "GetImagesLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApi"
              },
              "/*/*"
            ]
          ]
        }
      }
    },
    "CreateImageLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "CreateImageLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApi"
              },
              "/*/*"
            ]
          ]
        }
      }
    },
    "WebsocketsApi": {
      "Type": "AWS::ApiGatewayV2::Api",
      "Properties": {
        "Name": "dev-serverless-udagram-app-websockets",
        "RouteSelectionExpression": "$request.body.action",
        "Description": "Serverless Websockets",
        "ProtocolType": "WEBSOCKET"
      }
    },
    "ConnectHandlerWebsocketsIntegration": {
      "Type": "AWS::ApiGatewayV2::Integration",
      "Properties": {
        "ApiId": {
          "Ref": "WebsocketsApi"
        },
        "IntegrationType": "AWS_PROXY",
        "IntegrationUri": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":apigateway:",
              {
                "Ref": "AWS::Region"
              },
              ":lambda:path/2015-03-31/functions/",
              {
                "Fn::GetAtt": [
                  "ConnectHandlerLambdaFunction",
                  "Arn"
                ]
              },
              "/invocations"
            ]
          ]
        }
      }
    },
    "DisconnectHandlerWebsocketsIntegration": {
      "Type": "AWS::ApiGatewayV2::Integration",
      "Properties": {
        "ApiId": {
          "Ref": "WebsocketsApi"
        },
        "IntegrationType": "AWS_PROXY",
        "IntegrationUri": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":apigateway:",
              {
                "Ref": "AWS::Region"
              },
              ":lambda:path/2015-03-31/functions/",
              {
                "Fn::GetAtt": [
                  "DisconnectHandlerLambdaFunction",
                  "Arn"
                ]
              },
              "/invocations"
            ]
          ]
        }
      }
    },
    "DefaultHandlerWebsocketsIntegration": {
      "Type": "AWS::ApiGatewayV2::Integration",
      "Properties": {
        "ApiId": {
          "Ref": "WebsocketsApi"
        },
        "IntegrationType": "AWS_PROXY",
        "IntegrationUri": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":apigateway:",
              {
                "Ref": "AWS::Region"
              },
              ":lambda:path/2015-03-31/functions/",
              {
                "Fn::GetAtt": [
                  "DefaultHandlerLambdaFunction",
                  "Arn"
                ]
              },
              "/invocations"
            ]
          ]
        }
      }
    },
    "ConnectHandlerLambdaPermissionWebsockets": {
      "Type": "AWS::Lambda::Permission",
      "DependsOn": [
        "WebsocketsApi",
        "ConnectHandlerLambdaFunction"
      ],
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "ConnectHandlerLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com"
      }
    },
    "DisconnectHandlerLambdaPermissionWebsockets": {
      "Type": "AWS::Lambda::Permission",
      "DependsOn": [
        "WebsocketsApi",
        "DisconnectHandlerLambdaFunction"
      ],
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "DisconnectHandlerLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com"
      }
    },
    "DefaultHandlerLambdaPermissionWebsockets": {
      "Type": "AWS::Lambda::Permission",
      "DependsOn": [
        "WebsocketsApi",
        "DefaultHandlerLambdaFunction"
      ],
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "DefaultHandlerLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com"
      }
    },
    "SconnectWebsocketsRoute": {
      "Type": "AWS::ApiGatewayV2::Route",
      "Properties": {
        "ApiId": {
          "Ref": "WebsocketsApi"
        },
        "RouteKey": "$connect",
        "AuthorizationType": "NONE",
        "Target": {
          "Fn::Join": [
            "/",
            [
              "integrations",
              {
                "Ref": "ConnectHandlerWebsocketsIntegration"
              }
            ]
          ]
        }
      }
    },
    "SdisconnectWebsocketsRoute": {
      "Type": "AWS::ApiGatewayV2::Route",
      "Properties": {
        "ApiId": {
          "Ref": "WebsocketsApi"
        },
        "RouteKey": "$disconnect",
        "AuthorizationType": "NONE",
        "Target": {
          "Fn::Join": [
            "/",
            [
              "integrations",
              {
                "Ref": "DisconnectHandlerWebsocketsIntegration"
              }
            ]
          ]
        }
      }
    },
    "SdefaultWebsocketsRoute": {
      "Type": "AWS::ApiGatewayV2::Route",
      "Properties": {
        "ApiId": {
          "Ref": "WebsocketsApi"
        },
        "RouteKey": "$default",
        "AuthorizationType": "NONE",
        "Target": {
          "Fn::Join": [
            "/",
            [
              "integrations",
              {
                "Ref": "DefaultHandlerWebsocketsIntegration"
              }
            ]
          ]
        }
      }
    },
    "WebsocketsDeploymentStage": {
      "Type": "AWS::ApiGatewayV2::Stage",
      "Properties": {
        "ApiId": {
          "Ref": "WebsocketsApi"
        },
        "StageName": "dev",
        "Description": "Serverless Websockets",
        "DeploymentId": {
          "Ref": "WebsocketsDeploymentvksRjsFv82vaqER6BJkISdj0n2gJeHRLL5DujEehwgw"
        }
      }
    },
    "WebsocketsDeploymentvksRjsFv82vaqER6BJkISdj0n2gJeHRLL5DujEehwgw": {
      "Type": "AWS::ApiGatewayV2::Deployment",
      "DependsOn": [
        "SconnectWebsocketsRoute",
        "SdisconnectWebsocketsRoute",
        "SdefaultWebsocketsRoute"
      ],
      "Properties": {
        "ApiId": {
          "Ref": "WebsocketsApi"
        },
        "Description": "Serverless Websockets"
      }
    },
    "ResizeImagesSnsSubscriptionServerlessudagramappimagesnstopicdev": {
      "Type": "AWS::SNS::Subscription",
      "Properties": {
        "TopicArn": {
          "Ref": "ImageSnsTopic"
        },
        "Protocol": "lambda",
        "Endpoint": {
          "Fn::GetAtt": [
            "ResizeImagesLambdaFunction",
            "Arn"
          ]
        }
      }
    },
    "ResizeImagesLambdaPermissionServerlessudagramappimagesnstopicdevSNS": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "ResizeImagesLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "sns.amazonaws.com",
        "SourceArn": {
          "Ref": "ImageSnsTopic"
        }
      }
    },
    "SendUploadNotificationSnsSubscriptionServerlessudagramappimagesnstopicdev": {
      "Type": "AWS::SNS::Subscription",
      "Properties": {
        "TopicArn": {
          "Ref": "ImageSnsTopic"
        },
        "Protocol": "lambda",
        "Endpoint": {
          "Fn::GetAtt": [
            "SendUploadNotificationLambdaFunction",
            "Arn"
          ]
        }
      }
    },
    "SendUploadNotificationLambdaPermissionServerlessudagramappimagesnstopicdevSNS": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "SendUploadNotificationLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "sns.amazonaws.com",
        "SourceArn": {
          "Ref": "ImageSnsTopic"
        }
      }
    },
    "GroupRequestModel": {
      "Type": "AWS::ApiGateway::Model",
      "Properties": {
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "ContentType": "application/json",
        "Name": "GroupRequest",
        "Schema": {
          "$schema": "http://json-schema.org/draft-04/schema#",
          "title": "group",
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            },
            "description": {
              "type": "string"
            }
          },
          "required": [
            "name",
            "description"
          ],
          "additionalProperties": false
        }
      }
    },
    "CreateImageRequestModel": {
      "Type": "AWS::ApiGateway::Model",
      "Properties": {
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "ContentType": "application/json",
        "Name": "CreateImageRequest",
        "Schema": {
          "$schema": "http://json-schema.org/draft-04/schema#",
          "title": "image",
          "type": "object",
          "properties": {
            "title": {
              "type": "string"
            },
            "description": {
              "type": "string"
            }
          },
          "required": [
            "title",
            "description"
          ],
          "additionalProperties": false
        }
      }
    },
    "GatewayResponseDefault4xx": {
      "Type": "AWS::ApiGateway::GatewayResponse",
      "Properties": {
        "ResponseParameters": {
          "gatewayresponse.header.Access-Control-Allowed-Origin": "'*'",
          "gatewayresponse.header.Access-Control-Allowed-Headers": "'Content-Type,X-Amz-Date,Authorization'",
          "gatewayresponse.header.Access-Control-Allowed-Methods": "'POST,OPTIONS,GET'"
        },
        "ResponseType": "DEFAULT_4XX",
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "WebsocketsConnectionTable": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "TableName": "serverless-udagram-app-websockets-table-dev",
        "AttributeDefinitions": [
          {
            "AttributeName": "connectionId",
            "AttributeType": "S"
          }
        ],
        "KeySchema": [
          {
            "AttributeName": "connectionId",
            "KeyType": "HASH"
          }
        ],
        "BillingMode": "PAY_PER_REQUEST"
      }
    },
    "GroupsDynamoDBTable": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "AttributeDefinitions": [
          {
            "AttributeName": "id",
            "AttributeType": "S"
          }
        ],
        "KeySchema": [
          {
            "AttributeName": "id",
            "KeyType": "HASH"
          }
        ],
        "BillingMode": "PAY_PER_REQUEST",
        "TableName": "Groups-dev"
      }
    },
    "ImageThumbnailsBucket": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketName": "serverless-udagram-app-image-thumbnails-bucket-dev",
        "CorsConfiguration": {
          "CorsRules": [
            {
              "AllowedOrigins": [
                "*"
              ],
              "AllowedHeaders": [
                "*"
              ],
              "AllowedMethods": [
                "GET",
                "PUT",
                "DELETE",
                "POST",
                "HEAD"
              ],
              "MaxAge": 3000
            }
          ]
        }
      }
    },
    "ImageThumbnailsBucketPolicy": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "PolicyDocument": {
          "Id": "serverless-udagram-app-ImageThumbnailsPolicy",
          "Version": "2012-10-17",
          "Statement": {
            "Sid": "CreatePolicyForResizeLambdaFunction",
            "Effect": "Allow",
            "Action": "s3:GetObject",
            "Principal": {
              "AWS": "*"
            },
            "Resource": [
              {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Fn::GetAtt": [
                        "ImageThumbnailsBucket",
                        "Arn"
                      ]
                    },
                    "/*"
                  ]
                ]
              }
            ]
          }
        },
        "Bucket": {
          "Ref": "ImageThumbnailsBucket"
        }
      }
    },
    "ImagesDynamoDBTable": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "AttributeDefinitions": [
          {
            "AttributeName": "groupId",
            "AttributeType": "S"
          },
          {
            "AttributeName": "imageId",
            "AttributeType": "S"
          },
          {
            "AttributeName": "timestamp",
            "AttributeType": "S"
          }
        ],
        "KeySchema": [
          {
            "AttributeName": "groupId",
            "KeyType": "HASH"
          },
          {
            "AttributeName": "timestamp",
            "KeyType": "RANGE"
          }
        ],
        "BillingMode": "PAY_PER_REQUEST",
        "TableName": "Images-dev",
        "GlobalSecondaryIndexes": [
          {
            "IndexName": "ImageIdIndex",
            "KeySchema": [
              {
                "AttributeName": "imageId",
                "KeyType": "HASH"
              }
            ],
            "Projection": {
              "ProjectionType": "ALL"
            }
          }
        ]
      }
    },
    "RequestBodyValidator": {
      "Type": "AWS::ApiGateway::RequestValidator",
      "Properties": {
        "Name": "request-body-validator",
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "ValidateRequestBody": true,
        "ValidateRequestParameters": false
      }
    },
    "ImageSnsTopic": {
      "Type": "AWS::SNS::Topic",
      "Properties": {
        "TopicName": "serverless-udagram-app-image-sns-topic-dev",
        "DisplayName": "Images Create Topic"
      }
    },
    "ImagesTopicPolicy": {
      "Type": "AWS::SNS::TopicPolicy",
      "Properties": {
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "AWS": "*"
              },
              "Action": "sns:Publish",
              "Resource": {
                "Ref": "ImageSnsTopic"
              },
              "Condition": {
                "ArnLike": {
                  "AWS:SourceArn": {
                    "Fn::GetAtt": [
                      "ImagesBucket",
                      "Arn"
                    ]
                  }
                }
              }
            }
          ]
        },
        "Topics": [
          {
            "Ref": "ImageSnsTopic"
          }
        ]
      }
    },
    "ImagesBucket": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketName": "serverless-udagram-app-bucket-dev",
        "NotificationConfiguration": {
          "TopicConfigurations": [
            {
              "Event": "s3:ObjectCreated:Put",
              "Topic": {
                "Ref": "ImageSnsTopic"
              }
            }
          ]
        },
        "CorsConfiguration": {
          "CorsRules": [
            {
              "AllowedOrigins": [
                "*"
              ],
              "AllowedHeaders": [
                "*"
              ],
              "AllowedMethods": [
                "GET",
                "PUT",
                "DELETE",
                "POST",
                "HEAD"
              ],
              "MaxAge": 3000
            }
          ]
        }
      }
    },
    "ImagesBucketPolicy": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "PolicyDocument": {
          "Id": "serverless-udagram-app-ImagesBucketPolicy",
          "Version": "2012-10-17",
          "Statement": [
            {
              "Sid": "PublicReadForImages",
              "Principal": "*",
              "Effect": "Allow",
              "Action": [
                "s3:GetObject"
              ],
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:s3:::",
                      {
                        "Ref": "ImagesBucket"
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            }
          ]
        },
        "Bucket": {
          "Ref": "ImagesBucket"
        }
      }
    },
    "SendUploadNotificationLambdaPermission": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Ref": "SendUploadNotificationLambdaFunction"
        },
        "Principal": "s3.amazonaws.com",
        "Action": "lambda:InvokeFunction",
        "SourceAccount": {
          "Ref": "AWS::AccountId"
        },
        "SourceArn": "arn:aws:s3:::serverless-udagram-app-bucket-dev"
      }
    }
  },
  "Outputs": {
    "ServerlessDeploymentBucketName": {
      "Value": {
        "Ref": "ServerlessDeploymentBucket"
      },
      "Export": {
        "Name": "sls-serverless-udagram-app-dev-ServerlessDeploymentBucketName"
      }
    },
    "AuthLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "AuthLambdaVersionusVA2etTddFirZBTyBaGCEfY7cwJDiHgH8F1Lpx3IXs"
      },
      "Export": {
        "Name": "sls-serverless-udagram-app-dev-AuthLambdaFunctionQualifiedArn"
      }
    },
    "ResizeImagesLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "ResizeImagesLambdaVersionbR0XZrMX6zhjz4y1O1FkCvann10jxMmvsT4U4Rfrq0"
      },
      "Export": {
        "Name": "sls-serverless-udagram-app-dev-ResizeImagesLambdaFunctionQualifiedArn"
      }
    },
    "SendUploadNotificationLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "SendUploadNotificationLambdaVersionkH1yO8DKxzaFc97EtNP2Sq4zO67ngy2GbHRW140ybCA"
      },
      "Export": {
        "Name": "sls-serverless-udagram-app-dev-SendUploadNotificationLambdaFunctionQualifiedArn"
      }
    },
    "ConnectHandlerLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "ConnectHandlerLambdaVersionDwebvRiQo6feffH4KsH8LsITzYhbP20cxnjWFeAlSw"
      },
      "Export": {
        "Name": "sls-serverless-udagram-app-dev-ConnectHandlerLambdaFunctionQualifiedArn"
      }
    },
    "DisconnectHandlerLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "DisconnectHandlerLambdaVersionn5bkIENEMKOttiQYaLBl40MQOv7ndtgUotrWHl0M"
      },
      "Export": {
        "Name": "sls-serverless-udagram-app-dev-DisconnectHandlerLambdaFunctionQualifiedArn"
      }
    },
    "DefaultHandlerLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "DefaultHandlerLambdaVersionuvRilv9TuBV7o8NpjOqfIkpF4N35MEjhADTmIdc5tGw"
      },
      "Export": {
        "Name": "sls-serverless-udagram-app-dev-DefaultHandlerLambdaFunctionQualifiedArn"
      }
    },
    "GetGroupsLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "GetGroupsLambdaVersion8dn74xMQN3cp95KOFPoxRdyEOvLayQRJlJICUIjU"
      },
      "Export": {
        "Name": "sls-serverless-udagram-app-dev-GetGroupsLambdaFunctionQualifiedArn"
      }
    },
    "CreateGroupLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "CreateGroupLambdaVersionSt17dcNtdQGddEoeLz7NfRGl5YA7dpvoDOjZJxvUESc"
      },
      "Export": {
        "Name": "sls-serverless-udagram-app-dev-CreateGroupLambdaFunctionQualifiedArn"
      }
    },
    "GetImagesLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "GetImagesLambdaVersion82iklPA0LP5RrBwNcwZGTfivYaXhPTrCC4bzAvwQcQI"
      },
      "Export": {
        "Name": "sls-serverless-udagram-app-dev-GetImagesLambdaFunctionQualifiedArn"
      }
    },
    "CreateImageLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "CreateImageLambdaVersionmsfD280plI3MinVfGdRb9ZCh2DXZoUH4aT9evIp4"
      },
      "Export": {
        "Name": "sls-serverless-udagram-app-dev-CreateImageLambdaFunctionQualifiedArn"
      }
    },
    "ServiceEndpoint": {
      "Description": "URL of the service endpoint",
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "ApiGatewayRestApi"
            },
            ".execute-api.",
            {
              "Ref": "AWS::Region"
            },
            ".",
            {
              "Ref": "AWS::URLSuffix"
            },
            "/dev"
          ]
        ]
      },
      "Export": {
        "Name": "sls-serverless-udagram-app-dev-ServiceEndpoint"
      }
    },
    "ServiceEndpointWebsocket": {
      "Description": "URL of the service endpoint",
      "Value": {
        "Fn::Join": [
          "",
          [
            "wss://",
            {
              "Ref": "WebsocketsApi"
            },
            ".execute-api.",
            {
              "Ref": "AWS::Region"
            },
            ".",
            {
              "Ref": "AWS::URLSuffix"
            },
            "/dev"
          ]
        ]
      },
      "Export": {
        "Name": "sls-serverless-udagram-app-dev-ServiceEndpointWebsocket"
      }
    },
    "AwsDocApiId": {
      "Description": "API ID",
      "Value": {
        "Ref": "ApiGatewayRestApi"
      },
      "Export": {
        "Name": "sls-serverless-udagram-app-dev-AwsDocApiId"
      }
    }
  }
}